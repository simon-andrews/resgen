{
  "first_name": "John",
  "family_name": "Smith",
  "mobile": "(123) 456-7890",
  "email": "someone@example.com",
  "github": "john-smith",
  "linkedin": "john-smith",

  "sections": {
    "Education": {
      "entries": [
        {
          "dates": "Sep 2018 -- May 2022",
          "role": "Candidate for a B.S. in Computer Science",
          "at": "University of Massachusetts Amherst",
          "location": "Amherst, MA",
          "bullets": [
            {
              "text": "Relevant courses: Introduction to Problem Solving with Java, Programming with Data Structures"
            }
          ]
        }
      ]
    },
    "Work Experience": {
      "entries": [
        {
          "dates": "May 2018 -- Aug 2018",
          "role": "Software Development Intern",
          "at": "Hugecorp, Inc.",
          "location": "New York, NY",
          "bullets": [{"text": "Utilized zero-cost FFI with Ml to optimize a microservice using Kubernetes.", "tags": ["ml", "kubernetes"]}, {"text": "Optimized zygohistomorphic prepromophisms with D to justify switching to a stack without Log4J.", "tags": ["d", "log4j"]}, {"text": "Optimized left-pad libraries with F# to make web-scale a cluster of servers running Ember.", "tags": ["f#", "ember"]}, {"text": "Utilized a LISP dialect without parentheses with J++ to optimize a microservice using Apache-Commons.", "tags": ["j++", "apache-commons"]}, {"text": "Utilized zygohistomorphic prepromophisms with Java to replace a Slack bot made with Pytorch.", "tags": ["java", "pytorch"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Genie as an excuse to play with Apache-Commons.", "tags": ["genie", "apache-commons"]}, {"text": "Wrote unit tests for left-pad libraries with Lua to remove a dependency on Rails.", "tags": ["lua", "rails"]}, {"text": "Utilized blockchain-based social networks with Sql to justify switching to a stack without Ember.", "tags": ["sql", "ember"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with Cyclone as an excuse to play with Freebsd.", "tags": ["cyclone", "freebsd"]}, {"text": "Utilized fearless concurrency with Newsqueak to make web-scale a cluster of servers running Twisted.", "tags": ["newsqueak", "twisted"]}, {"text": "Utilized blockchain-based social networks with Newsqueak to prove the fragility of Jenkins.", "tags": ["newsqueak", "jenkins"]}, {"text": "Split a monolith into microservices using a human-in-the-loop control system with Seed7 as an excuse to play with Tensorflow.", "tags": ["seed7", "tensorflow"]}, {"text": "Optimized fearless concurrency with Assembly to replace a Slack bot made with Qemu.", "tags": ["assembly", "qemu"]}, {"text": "Used Jenkins CI server to test Browsr, the web frontend framework of tomorrow, with Clu to prove the fragility of Tension.", "tags": ["clu", "tension"]}, {"text": "Implemented blockchain-based social networks with Qore to download documentation for Pandas.", "tags": ["qore", "pandas"]}, {"text": "Utilized blockchain-based social networks with Elm as an excuse to play with Virtualbox.", "tags": ["elm", "virtualbox"]}, {"text": "Split a monolith into microservices using left-pad libraries with Perl to download documentation for Jquery.", "tags": ["perl", "jquery"]}, {"text": "Utilized a LISP dialect without parentheses with Icon to make web-scale a cluster of servers running Node.Js.", "tags": ["icon", "node.js"]}, {"text": "Encouraged adoption of Browsr, the web frontend framework of tomorrow, with Mesa to justify switching to a stack without Boost.", "tags": ["mesa", "boost"]}, {"text": "Programmed a robot with blockchain-based social networks with Elm to justify switching to a stack without Qemu.", "tags": ["elm", "qemu"]}, {"text": "Utilized a LISP dialect without parentheses with Java to remove a dependency on Sinatra.", "tags": ["java", "sinatra"]}, {"text": "Encouraged adoption of left-pad libraries with Lua to justify switching to a stack without Cmake.", "tags": ["lua", "cmake"]}, {"text": "Optimized zygohistomorphic prepromophisms with Vb.Net to download documentation for Scrapy.", "tags": ["vb.net", "scrapy"]}, {"text": "Optimized zero-cost FFI with Ucsd Pascal to remove a dependency on Cordova.", "tags": ["ucsd pascal", "cordova"]}, {"text": "Utilized zero-cost FFI with Gambas to remove a dependency on Django.", "tags": ["gambas", "django"]}, {"text": "Programmed a robot with left-pad libraries with J++ as an excuse to play with Ember.", "tags": ["j++", "ember"]}, {"text": "Programmed a robot with zero-cost FFI with Html to replace a Slack bot made with Electron.", "tags": ["html", "electron"]}, {"text": "Programmed a robot with zero-cost FFI with Oberon to remove a dependency on Cmake.", "tags": ["oberon", "cmake"]}, {"text": "Implemented zygohistomorphic prepromophisms with Dart as an excuse to play with Rails.", "tags": ["dart", "rails"]}, {"text": "Optimized zygohistomorphic prepromophisms with Dart to justify switching to a stack without Pillows.", "tags": ["dart", "pillows"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Css to make web-scale a cluster of servers running Django.", "tags": ["css", "django"]}, {"text": "Optimized left-pad libraries with Ocaml to optimize a microservice using Django.", "tags": ["ocaml", "django"]}, {"text": "Programmed a robot with blockchain-based social networks with Mesa to make web-scale a cluster of servers running Matplotlib.", "tags": ["mesa", "matplotlib"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with Genie to replace a Slack bot made with React.", "tags": ["genie", "react"]}, {"text": "Implemented zygohistomorphic prepromophisms with Assembly to make web-scale a cluster of servers running Ansible.", "tags": ["assembly", "ansible"]}, {"text": "Wrote unit tests for zygohistomorphic prepromophisms with Erlang as an excuse to play with Matplotlib.", "tags": ["erlang", "matplotlib"]}, {"text": "Programmed a robot with fearless concurrency with Crystal to remove a dependency on Tqdm.", "tags": ["crystal", "tqdm"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Smalltalk to download documentation for Vmware.", "tags": ["smalltalk", "vmware"]}, {"text": "Implemented left-pad libraries with Lua to optimize a microservice using React.", "tags": ["lua", "react"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Haxe to replace a Slack bot made with Pandas.", "tags": ["haxe", "pandas"]}, {"text": "Encouraged adoption of Browsr, the web frontend framework of tomorrow, with Ml to download documentation for Linux.", "tags": ["ml", "linux"]}, {"text": "Used Jenkins CI server to test fearless concurrency with Objective-C as an excuse to play with Git.", "tags": ["objective-c", "git"]}, {"text": "Encouraged adoption of fearless concurrency with Erlang to optimize a microservice using Node.Js.", "tags": ["erlang", "node.js"]}, {"text": "Implemented left-pad libraries with Beanshell to prove the fragility of Pillows.", "tags": ["beanshell", "pillows"]}, {"text": "Utilized blockchain-based social networks with Seed7 as an excuse to play with Git.", "tags": ["seed7", "git"]}, {"text": "Implemented zero-cost FFI with Sql to download documentation for Scrapy.", "tags": ["sql", "scrapy"]}, {"text": "Utilized blockchain-based social networks with Assembly to make web-scale a cluster of servers running Git.", "tags": ["assembly", "git"]}, {"text": "Split a monolith into microservices using Browsr, the web frontend framework of tomorrow, with Ml to replace a Slack bot made with Slf4J.", "tags": ["ml", "slf4j"]}, {"text": "Utilized zero-cost FFI with Oberon to replace a Slack bot made with Cordova.", "tags": ["oberon", "cordova"]}, {"text": "Programmed a robot with zygohistomorphic prepromophisms with Intercal to optimize a microservice using Freebsd.", "tags": ["intercal", "freebsd"]}, {"text": "Encouraged adoption of left-pad libraries with J++ to optimize a microservice using Git.", "tags": ["j++", "git"]}, {"text": "Encouraged adoption of fearless concurrency with Ocaml to optimize a microservice using Cordova.", "tags": ["ocaml", "cordova"]}, {"text": "Utilized zygohistomorphic prepromophisms with Python to prove the fragility of Matplotlib.", "tags": ["python", "matplotlib"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Haskell to optimize a microservice using Linux.", "tags": ["haskell", "linux"]}, {"text": "Programmed a robot with a LISP dialect without parentheses with F# to justify switching to a stack without Pytorch.", "tags": ["f#", "pytorch"]}, {"text": "Utilized left-pad libraries with Haskell to make web-scale a cluster of servers running Cordova.", "tags": ["haskell", "cordova"]}, {"text": "Split a monolith into microservices using fearless concurrency with Scheme to download documentation for Vue.Js.", "tags": ["scheme", "vue.js"]}, {"text": "Utilized left-pad libraries with Ruby to optimize a microservice using Tensorflow.", "tags": ["ruby", "tensorflow"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with Nim as an excuse to play with Angular.", "tags": ["nim", "angular"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Kotlin as an excuse to play with Docker.", "tags": ["kotlin", "docker"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with C to replace a Slack bot made with Kivy.", "tags": ["c", "kivy"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Eiffel to optimize a microservice using Git.", "tags": ["eiffel", "git"]}, {"text": "Utilized a human-in-the-loop control system with Sql to optimize a microservice using Vue.Js.", "tags": ["sql", "vue.js"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with Html to remove a dependency on Apache-Commons.", "tags": ["html", "apache-commons"]}, {"text": "Optimized a human-in-the-loop control system with Ucsd Pascal to optimize a microservice using Apache-Commons.", "tags": ["ucsd pascal", "apache-commons"]}, {"text": "Encouraged adoption of a LISP dialect without parentheses with Nemerle as an excuse to play with Cordova.", "tags": ["nemerle", "cordova"]}, {"text": "Utilized zero-cost FFI with Haskell as an excuse to play with Ansible.", "tags": ["haskell", "ansible"]}, {"text": "Wrote unit tests for blockchain-based social networks with Modula-3 to remove a dependency on Jquery.", "tags": ["modula-3", "jquery"]}, {"text": "Optimized a LISP dialect without parentheses with Sql to make web-scale a cluster of servers running Tqdm.", "tags": ["sql", "tqdm"]}, {"text": "Used Jenkins CI server to test fearless concurrency with Chapel to download documentation for Aws.", "tags": ["chapel", "aws"]}, {"text": "Encouraged adoption of fearless concurrency with Lua as an excuse to play with Ember.", "tags": ["lua", "ember"]}, {"text": "Utilized zygohistomorphic prepromophisms with J++ to prove the fragility of Ember.", "tags": ["j++", "ember"]}, {"text": "Wrote unit tests for Browsr, the web frontend framework of tomorrow, with R to make web-scale a cluster of servers running Hadoop.", "tags": ["r", "hadoop"]}, {"text": "Used Jenkins CI server to test zero-cost FFI with Swift to prove the fragility of Chef.", "tags": ["swift", "chef"]}, {"text": "Wrote unit tests for left-pad libraries with Mesa to prove the fragility of Vmware.", "tags": ["mesa", "vmware"]}, {"text": "Utilized left-pad libraries with Vba to optimize a microservice using Ansible.", "tags": ["vba", "ansible"]}, {"text": "Encouraged adoption of a LISP dialect without parentheses with Kotlin to make web-scale a cluster of servers running Tension.", "tags": ["kotlin", "tension"]}, {"text": "Programmed a robot with zero-cost FFI with Standard Ml to replace a Slack bot made with Spark.", "tags": ["standard ml", "spark"]}, {"text": "Wrote unit tests for a LISP dialect without parentheses with Beanshell to make web-scale a cluster of servers running Pytorch.", "tags": ["beanshell", "pytorch"]}, {"text": "Used Jenkins CI server to test a human-in-the-loop control system with C to prove the fragility of React.", "tags": ["c", "react"]}, {"text": "Encouraged adoption of zero-cost FFI with Ml to remove a dependency on Tqdm.", "tags": ["ml", "tqdm"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Python to replace a Slack bot made with Docker.", "tags": ["python", "docker"]}, {"text": "Wrote unit tests for a human-in-the-loop control system with Ring to make web-scale a cluster of servers running Electron.", "tags": ["ring", "electron"]}, {"text": "Implemented blockchain-based social networks with Ring to optimize a microservice using Kivy.", "tags": ["ring", "kivy"]}, {"text": "Wrote unit tests for a LISP dialect without parentheses with Perl as an excuse to play with Twisted.", "tags": ["perl", "twisted"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with Erlang to replace a Slack bot made with Pillows.", "tags": ["erlang", "pillows"]}, {"text": "Used Jenkins CI server to test fearless concurrency with Ring as an excuse to play with Apache-Commons.", "tags": ["ring", "apache-commons"]}, {"text": "Wrote unit tests for Browsr, the web frontend framework of tomorrow, with Mesa to optimize a microservice using Jquery.", "tags": ["mesa", "jquery"]}, {"text": "Programmed a robot with blockchain-based social networks with Clojure to justify switching to a stack without Boost.", "tags": ["clojure", "boost"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Hermes to prove the fragility of Pandas.", "tags": ["hermes", "pandas"]}, {"text": "Optimized a LISP dialect without parentheses with Perl to prove the fragility of Junit.", "tags": ["perl", "junit"]}, {"text": "Encouraged adoption of fearless concurrency with Vba to download documentation for Guava.", "tags": ["vba", "guava"]}, {"text": "Encouraged adoption of Browsr, the web frontend framework of tomorrow, with Objective-C to make web-scale a cluster of servers running Freebsd.", "tags": ["objective-c", "freebsd"]}, {"text": "Encouraged adoption of zygohistomorphic prepromophisms with Newsqueak to download documentation for React.", "tags": ["newsqueak", "react"]}, {"text": "Wrote unit tests for a human-in-the-loop control system with Smalltalk to download documentation for Docker.", "tags": ["smalltalk", "docker"]}, {"text": "Programmed a robot with a LISP dialect without parentheses with Python to download documentation for Virtualbox.", "tags": ["python", "virtualbox"]}, {"text": "Used Jenkins CI server to test blockchain-based social networks with Ml to prove the fragility of Freebsd.", "tags": ["ml", "freebsd"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with J# to download documentation for Log4J.", "tags": ["j#", "log4j"]}, {"text": "Split a monolith into microservices using left-pad libraries with Seed7 as an excuse to play with Spring.", "tags": ["seed7", "spring"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with Smalltalk to justify switching to a stack without Xamarin.", "tags": ["smalltalk", "xamarin"]}, {"text": "Implemented blockchain-based social networks with Monkey to optimize a microservice using Rails.", "tags": ["monkey", "rails"]}, {"text": "Encouraged adoption of zygohistomorphic prepromophisms with Erlang to replace a Slack bot made with Apache-Commons.", "tags": ["erlang", "apache-commons"]}, {"text": "Encouraged adoption of zero-cost FFI with Erlang to optimize a microservice using Vmware.", "tags": ["erlang", "vmware"]}, {"text": "Programmed a robot with left-pad libraries with Clojure to prove the fragility of Boost.", "tags": ["clojure", "boost"]}, {"text": "Wrote unit tests for left-pad libraries with Idris to justify switching to a stack without Log4J.", "tags": ["idris", "log4j"]}, {"text": "Programmed a robot with a LISP dialect without parentheses with Lua to replace a Slack bot made with Rails.", "tags": ["lua", "rails"]}, {"text": "Implemented blockchain-based social networks with Ml to justify switching to a stack without Ember.", "tags": ["ml", "ember"]}, {"text": "Optimized blockchain-based social networks with D to make web-scale a cluster of servers running Vmware.", "tags": ["d", "vmware"]}, {"text": "Encouraged adoption of blockchain-based social networks with Strongtalk to make web-scale a cluster of servers running Cordova.", "tags": ["strongtalk", "cordova"]}, {"text": "Utilized zygohistomorphic prepromophisms with Oberon to remove a dependency on Tqdm.", "tags": ["oberon", "tqdm"]}, {"text": "Split a monolith into microservices using blockchain-based social networks with Oberon to justify switching to a stack without Guava.", "tags": ["oberon", "guava"]}, {"text": "Encouraged adoption of a LISP dialect without parentheses with Clu to justify switching to a stack without Apache-Commons.", "tags": ["clu", "apache-commons"]}, {"text": "Programmed a robot with left-pad libraries with Hermes to remove a dependency on Boost.", "tags": ["hermes", "boost"]}, {"text": "Used Jenkins CI server to test zero-cost FFI with Css as an excuse to play with Kivy.", "tags": ["css", "kivy"]}, {"text": "Wrote unit tests for left-pad libraries with Ring to prove the fragility of Git.", "tags": ["ring", "git"]}, {"text": "Split a monolith into microservices using a LISP dialect without parentheses with Fantom to download documentation for Kivy.", "tags": ["fantom", "kivy"]}, {"text": "Encouraged adoption of zygohistomorphic prepromophisms with Beanshell to make web-scale a cluster of servers running Virtualbox.", "tags": ["beanshell", "virtualbox"]}, {"text": "Split a monolith into microservices using blockchain-based social networks with Simula as an excuse to play with Requests.", "tags": ["simula", "requests"]}, {"text": "Implemented fearless concurrency with Nim to download documentation for Rails.", "tags": ["nim", "rails"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Ada to remove a dependency on Tensorflow.", "tags": ["ada", "tensorflow"]}, {"text": "Encouraged adoption of fearless concurrency with Kotlin to download documentation for .Net Core.", "tags": ["kotlin", ".net core"]}, {"text": "Utilized left-pad libraries with Ada to remove a dependency on Freebsd.", "tags": ["ada", "freebsd"]}, {"text": "Encouraged adoption of left-pad libraries with Cyclone to make web-scale a cluster of servers running Sinatra.", "tags": ["cyclone", "sinatra"]}, {"text": "Encouraged adoption of Browsr, the web frontend framework of tomorrow, with D to remove a dependency on Node.Js.", "tags": ["d", "node.js"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Hermes to make web-scale a cluster of servers running Requests.", "tags": ["hermes", "requests"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Oxygene as an excuse to play with Node.Js.", "tags": ["oxygene", "node.js"]}, {"text": "Split a monolith into microservices using a LISP dialect without parentheses with Oberon to make web-scale a cluster of servers running Angular.", "tags": ["oberon", "angular"]}, {"text": "Programmed a robot with fearless concurrency with Monkey to replace a Slack bot made with Jquery.", "tags": ["monkey", "jquery"]}, {"text": "Optimized zero-cost FFI with Alefbash to justify switching to a stack without Scrapy.", "tags": ["alefbash", "scrapy"]}, {"text": "Programmed a robot with left-pad libraries with Erlang to prove the fragility of Rails.", "tags": ["erlang", "rails"]}, {"text": "Implemented zygohistomorphic prepromophisms with Ocaml to download documentation for Electron.", "tags": ["ocaml", "electron"]}, {"text": "Encouraged adoption of Browsr, the web frontend framework of tomorrow, with Scheme to justify switching to a stack without Pandas.", "tags": ["scheme", "pandas"]}, {"text": "Implemented zero-cost FFI with Scala to optimize a microservice using Log4J.", "tags": ["scala", "log4j"]}, {"text": "Used Jenkins CI server to test fearless concurrency with Php to optimize a microservice using Requests.", "tags": ["php", "requests"]}, {"text": "Used Jenkins CI server to test zero-cost FFI with J# as an excuse to play with Matplotlib.", "tags": ["j#", "matplotlib"]}, {"text": "Programmed a robot with a LISP dialect without parentheses with Clu as an excuse to play with Apache-Commons.", "tags": ["clu", "apache-commons"]}, {"text": "Implemented left-pad libraries with Idris to replace a Slack bot made with Xamarin.", "tags": ["idris", "xamarin"]}, {"text": "Optimized a human-in-the-loop control system with Swift to remove a dependency on Git.", "tags": ["swift", "git"]}, {"text": "Programmed a robot with a LISP dialect without parentheses with Sql to download documentation for Django.", "tags": ["sql", "django"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Objective-C to remove a dependency on Pandas.", "tags": ["objective-c", "pandas"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Nemerle to optimize a microservice using Ember.", "tags": ["nemerle", "ember"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Groovy to prove the fragility of Freebsd.", "tags": ["groovy", "freebsd"]}, {"text": "Implemented blockchain-based social networks with Eiffel to download documentation for Tension.", "tags": ["eiffel", "tension"]}, {"text": "Implemented zero-cost FFI with Genie as an excuse to play with Pillows.", "tags": ["genie", "pillows"]}, {"text": "Split a monolith into microservices using left-pad libraries with Standard Ml to replace a Slack bot made with Vue.Js.", "tags": ["standard ml", "vue.js"]}, {"text": "Utilized left-pad libraries with Fantom to replace a Slack bot made with Linux.", "tags": ["fantom", "linux"]}, {"text": "Split a monolith into microservices using Browsr, the web frontend framework of tomorrow, with Rust to replace a Slack bot made with Aws.", "tags": ["rust", "aws"]}, {"text": "Split a monolith into microservices using a LISP dialect without parentheses with Ring as an excuse to play with Requests.", "tags": ["ring", "requests"]}, {"text": "Programmed a robot with zero-cost FFI with J++ to justify switching to a stack without Git.", "tags": ["j++", "git"]}, {"text": "Split a monolith into microservices using Browsr, the web frontend framework of tomorrow, with Clojure to prove the fragility of Scrapy.", "tags": ["clojure", "scrapy"]}, {"text": "Encouraged adoption of Browsr, the web frontend framework of tomorrow, with Smalltalk to justify switching to a stack without Linux.", "tags": ["smalltalk", "linux"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Genie as an excuse to play with Scrapy.", "tags": ["genie", "scrapy"]}, {"text": "Wrote unit tests for zero-cost FFI with Ucsd Pascal to justify switching to a stack without Vmware.", "tags": ["ucsd pascal", "vmware"]}, {"text": "Split a monolith into microservices using blockchain-based social networks with Objective-C to replace a Slack bot made with Pandas.", "tags": ["objective-c", "pandas"]}, {"text": "Encouraged adoption of zero-cost FFI with Python to justify switching to a stack without Ember.", "tags": ["python", "ember"]}, {"text": "Utilized a LISP dialect without parentheses with Ecmascript to make web-scale a cluster of servers running Sinatra.", "tags": ["ecmascript", "sinatra"]}, {"text": "Wrote unit tests for zero-cost FFI with Elixir as an excuse to play with Junit.", "tags": ["elixir", "junit"]}, {"text": "Optimized left-pad libraries with Ruby to download documentation for Ansible.", "tags": ["ruby", "ansible"]}, {"text": "Used Jenkins CI server to test blockchain-based social networks with Nemerle to make web-scale a cluster of servers running Docker.", "tags": ["nemerle", "docker"]}, {"text": "Implemented zero-cost FFI with Clu to remove a dependency on Tensorflow.", "tags": ["clu", "tensorflow"]}, {"text": "Programmed a robot with fearless concurrency with Clu to download documentation for Log4J.", "tags": ["clu", "log4j"]}, {"text": "Split a monolith into microservices using fearless concurrency with Beanshell to download documentation for Tensorflow.", "tags": ["beanshell", "tensorflow"]}, {"text": "Encouraged adoption of fearless concurrency with Javascript to download documentation for Spring.", "tags": ["javascript", "spring"]}, {"text": "Encouraged adoption of a human-in-the-loop control system with Nil to justify switching to a stack without Pillows.", "tags": ["nil", "pillows"]}, {"text": "Implemented left-pad libraries with Scheme as an excuse to play with Ansible.", "tags": ["scheme", "ansible"]}, {"text": "Optimized left-pad libraries with Rust to optimize a microservice using Sinatra.", "tags": ["rust", "sinatra"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with Modula-3 to make web-scale a cluster of servers running Git.", "tags": ["modula-3", "git"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Genie to remove a dependency on Node.Js.", "tags": ["genie", "node.js"]}, {"text": "Encouraged adoption of blockchain-based social networks with Alefbash to replace a Slack bot made with Vmware.", "tags": ["alefbash", "vmware"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Chapel to download documentation for Slf4J.", "tags": ["chapel", "slf4j"]}, {"text": "Programmed a robot with fearless concurrency with Fantom to make web-scale a cluster of servers running Boost.", "tags": ["fantom", "boost"]}, {"text": "Optimized a human-in-the-loop control system with Standard Ml to remove a dependency on Ember.", "tags": ["standard ml", "ember"]}, {"text": "Implemented a LISP dialect without parentheses with Erlang to remove a dependency on Slf4J.", "tags": ["erlang", "slf4j"]}, {"text": "Optimized zygohistomorphic prepromophisms with Nemerle to optimize a microservice using Rails.", "tags": ["nemerle", "rails"]}, {"text": "Utilized blockchain-based social networks with Java as an excuse to play with Tqdm.", "tags": ["java", "tqdm"]}, {"text": "Programmed a robot with Browsr, the web frontend framework of tomorrow, with Erlang to make web-scale a cluster of servers running Rails.", "tags": ["erlang", "rails"]}, {"text": "Programmed a robot with Browsr, the web frontend framework of tomorrow, with Vba to make web-scale a cluster of servers running Ansible.", "tags": ["vba", "ansible"]}, {"text": "Programmed a robot with Browsr, the web frontend framework of tomorrow, with Ucsd Pascal to prove the fragility of Spark.", "tags": ["ucsd pascal", "spark"]}, {"text": "Utilized zero-cost FFI with Golang to optimize a microservice using Cmake.", "tags": ["golang", "cmake"]}, {"text": "Utilized a human-in-the-loop control system with Alefbash to remove a dependency on Boost.", "tags": ["alefbash", "boost"]}, {"text": "Optimized a LISP dialect without parentheses with Dylan to make web-scale a cluster of servers running Ansible.", "tags": ["dylan", "ansible"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Ruby to justify switching to a stack without Electron.", "tags": ["ruby", "electron"]}, {"text": "Optimized a human-in-the-loop control system with Hermes as an excuse to play with Angular.", "tags": ["hermes", "angular"]}, {"text": "Programmed a robot with zero-cost FFI with C# to make web-scale a cluster of servers running Ember.", "tags": ["c#", "ember"]}, {"text": "Encouraged adoption of fearless concurrency with Kotlin to make web-scale a cluster of servers running Hadoop.", "tags": ["kotlin", "hadoop"]}, {"text": "Split a monolith into microservices using fearless concurrency with Tcl to remove a dependency on Chef.", "tags": ["tcl", "chef"]}, {"text": "Optimized fearless concurrency with Icon to prove the fragility of Kubernetes.", "tags": ["icon", "kubernetes"]}, {"text": "Encouraged adoption of left-pad libraries with Assembly to justify switching to a stack without Pytorch.", "tags": ["assembly", "pytorch"]}, {"text": "Programmed a robot with fearless concurrency with Icon to download documentation for Qemu.", "tags": ["icon", "qemu"]}, {"text": "Programmed a robot with a LISP dialect without parentheses with Php to remove a dependency on Kubernetes.", "tags": ["php", "kubernetes"]}, {"text": "Utilized zygohistomorphic prepromophisms with Ucsd Pascal to make web-scale a cluster of servers running Django.", "tags": ["ucsd pascal", "django"]}, {"text": "Used Jenkins CI server to test blockchain-based social networks with Dylan to prove the fragility of Tqdm.", "tags": ["dylan", "tqdm"]}, {"text": "Utilized left-pad libraries with Javascript to remove a dependency on Guava.", "tags": ["javascript", "guava"]}, {"text": "Implemented a LISP dialect without parentheses with Perl as an excuse to play with Matplotlib.", "tags": ["perl", "matplotlib"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Vb.Net to download documentation for Pytorch.", "tags": ["vb.net", "pytorch"]}, {"text": "Implemented left-pad libraries with Genie to replace a Slack bot made with Jquery.", "tags": ["genie", "jquery"]}, {"text": "Used Jenkins CI server to test fearless concurrency with Nemerle to optimize a microservice using Docker.", "tags": ["nemerle", "docker"]}, {"text": "Optimized blockchain-based social networks with Chapel to download documentation for Guava.", "tags": ["chapel", "guava"]}, {"text": "Implemented zygohistomorphic prepromophisms with Erlang to prove the fragility of Electron.", "tags": ["erlang", "electron"]}, {"text": "Programmed a robot with zero-cost FFI with Icon to remove a dependency on Spring.", "tags": ["icon", "spring"]}]
        },
        {
          "dates": "May 2017 -- Aug 2017",
          "role": "Code Artisan",
          "at": "Startupr.io",
          "location": "Palo Alto, CA",
          "bullets": [{"text": "Programmed a robot with a LISP dialect without parentheses with D to make web-scale a cluster of servers running Scrapy.", "tags": ["d", "scrapy"]}, {"text": "Split a monolith into microservices using a human-in-the-loop control system with Ucsd Pascal to replace a Slack bot made with Chef.", "tags": ["ucsd pascal", "chef"]}, {"text": "Utilized a human-in-the-loop control system with R as an excuse to play with Redis.", "tags": ["r", "redis"]}, {"text": "Wrote unit tests for left-pad libraries with Chapel as an excuse to play with Boost.", "tags": ["chapel", "boost"]}, {"text": "Implemented a LISP dialect without parentheses with C++ to make web-scale a cluster of servers running Vue.Js.", "tags": ["c++", "vue.js"]}, {"text": "Encouraged adoption of a human-in-the-loop control system with Ocaml to replace a Slack bot made with Rails.", "tags": ["ocaml", "rails"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with C to download documentation for Matplotlib.", "tags": ["c", "matplotlib"]}, {"text": "Implemented a human-in-the-loop control system with Sql as an excuse to play with Spring.", "tags": ["sql", "spring"]}, {"text": "Optimized a LISP dialect without parentheses with C++ to optimize a microservice using Sinatra.", "tags": ["c++", "sinatra"]}, {"text": "Encouraged adoption of zygohistomorphic prepromophisms with Objective-C to download documentation for Virtualbox.", "tags": ["objective-c", "virtualbox"]}, {"text": "Used Jenkins CI server to test Browsr, the web frontend framework of tomorrow, with Ecmascript to make web-scale a cluster of servers running Jquery.", "tags": ["ecmascript", "jquery"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Elixir to make web-scale a cluster of servers running Qemu.", "tags": ["elixir", "qemu"]}, {"text": "Encouraged adoption of left-pad libraries with Gambas to replace a Slack bot made with Aws.", "tags": ["gambas", "aws"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with Ecmascript as an excuse to play with Redis.", "tags": ["ecmascript", "redis"]}, {"text": "Implemented a LISP dialect without parentheses with Newsqueak to replace a Slack bot made with Angular.", "tags": ["newsqueak", "angular"]}, {"text": "Programmed a robot with zygohistomorphic prepromophisms with Python to prove the fragility of Junit.", "tags": ["python", "junit"]}, {"text": "Optimized a human-in-the-loop control system with Oberon to make web-scale a cluster of servers running Junit.", "tags": ["oberon", "junit"]}, {"text": "Optimized a LISP dialect without parentheses with Intercal to download documentation for Tensorflow.", "tags": ["intercal", "tensorflow"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Monkey to make web-scale a cluster of servers running Hadoop.", "tags": ["monkey", "hadoop"]}, {"text": "Implemented fearless concurrency with Vala to download documentation for Tqdm.", "tags": ["vala", "tqdm"]}, {"text": "Programmed a robot with Browsr, the web frontend framework of tomorrow, with Ruby to download documentation for Twisted.", "tags": ["ruby", "twisted"]}, {"text": "Utilized left-pad libraries with Clojure to download documentation for Apache-Commons.", "tags": ["clojure", "apache-commons"]}, {"text": "Split a monolith into microservices using fearless concurrency with Haxe to make web-scale a cluster of servers running Docker.", "tags": ["haxe", "docker"]}, {"text": "Used Jenkins CI server to test a LISP dialect without parentheses with Alefbash to replace a Slack bot made with Scrapy.", "tags": ["alefbash", "scrapy"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with J++ to prove the fragility of Freebsd.", "tags": ["j++", "freebsd"]}, {"text": "Used Jenkins CI server to test a human-in-the-loop control system with C++ to replace a Slack bot made with Qemu.", "tags": ["c++", "qemu"]}, {"text": "Wrote unit tests for blockchain-based social networks with Vb.Net to make web-scale a cluster of servers running Docker.", "tags": ["vb.net", "docker"]}, {"text": "Wrote unit tests for left-pad libraries with Newsqueak to remove a dependency on Pillows.", "tags": ["newsqueak", "pillows"]}, {"text": "Split a monolith into microservices using blockchain-based social networks with Strongtalk to replace a Slack bot made with Boost.", "tags": ["strongtalk", "boost"]}, {"text": "Wrote unit tests for a LISP dialect without parentheses with Ucsd Pascal as an excuse to play with Virtualbox.", "tags": ["ucsd pascal", "virtualbox"]}, {"text": "Encouraged adoption of left-pad libraries with Genie to remove a dependency on Git.", "tags": ["genie", "git"]}, {"text": "Used Jenkins CI server to test Browsr, the web frontend framework of tomorrow, with Html to replace a Slack bot made with Requests.", "tags": ["html", "requests"]}, {"text": "Used Jenkins CI server to test zero-cost FFI with Monkey to replace a Slack bot made with Boost.", "tags": ["monkey", "boost"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Cyclone to replace a Slack bot made with Docker.", "tags": ["cyclone", "docker"]}, {"text": "Optimized blockchain-based social networks with Ecmascript to make web-scale a cluster of servers running Pandas.", "tags": ["ecmascript", "pandas"]}, {"text": "Implemented zygohistomorphic prepromophisms with Ecmascript to replace a Slack bot made with Jquery.", "tags": ["ecmascript", "jquery"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with Oberon to remove a dependency on Git.", "tags": ["oberon", "git"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with C to justify switching to a stack without Jquery.", "tags": ["c", "jquery"]}, {"text": "Encouraged adoption of left-pad libraries with Alefbash to make web-scale a cluster of servers running Sinatra.", "tags": ["alefbash", "sinatra"]}, {"text": "Split a monolith into microservices using blockchain-based social networks with C to download documentation for Requests.", "tags": ["c", "requests"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with Sql to replace a Slack bot made with Jenkins.", "tags": ["sql", "jenkins"]}, {"text": "Encouraged adoption of blockchain-based social networks with Idris to prove the fragility of Django.", "tags": ["idris", "django"]}, {"text": "Implemented left-pad libraries with Javascript to remove a dependency on Slf4J.", "tags": ["javascript", "slf4j"]}, {"text": "Optimized left-pad libraries with Dylan as an excuse to play with Redis.", "tags": ["dylan", "redis"]}, {"text": "Optimized a human-in-the-loop control system with Lua to download documentation for Tension.", "tags": ["lua", "tension"]}, {"text": "Used Jenkins CI server to test left-pad libraries with Fantom to optimize a microservice using Junit.", "tags": ["fantom", "junit"]}, {"text": "Utilized zero-cost FFI with C# as an excuse to play with Django.", "tags": ["c#", "django"]}, {"text": "Optimized zygohistomorphic prepromophisms with Ecmascript to remove a dependency on Cmake.", "tags": ["ecmascript", "cmake"]}, {"text": "Programmed a robot with blockchain-based social networks with Ecmascript to justify switching to a stack without Git.", "tags": ["ecmascript", "git"]}, {"text": "Wrote unit tests for a LISP dialect without parentheses with Simula to remove a dependency on Cordova.", "tags": ["simula", "cordova"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Beanshell to optimize a microservice using Jquery.", "tags": ["beanshell", "jquery"]}, {"text": "Split a monolith into microservices using Browsr, the web frontend framework of tomorrow, with Modula-3 as an excuse to play with .Net Core.", "tags": ["modula-3", ".net core"]}, {"text": "Encouraged adoption of left-pad libraries with Clojure to replace a Slack bot made with Virtualbox.", "tags": ["clojure", "virtualbox"]}, {"text": "Encouraged adoption of zero-cost FFI with Ucsd Pascal to remove a dependency on Node.Js.", "tags": ["ucsd pascal", "node.js"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Swift to replace a Slack bot made with Spark.", "tags": ["swift", "spark"]}, {"text": "Wrote unit tests for a LISP dialect without parentheses with Simula as an excuse to play with Spark.", "tags": ["simula", "spark"]}, {"text": "Programmed a robot with zero-cost FFI with Html to prove the fragility of Twisted.", "tags": ["html", "twisted"]}, {"text": "Used Jenkins CI server to test a human-in-the-loop control system with Qore to remove a dependency on Tqdm.", "tags": ["qore", "tqdm"]}, {"text": "Wrote unit tests for zero-cost FFI with Icon to replace a Slack bot made with Slf4J.", "tags": ["icon", "slf4j"]}, {"text": "Optimized left-pad libraries with Sql to optimize a microservice using Jenkins.", "tags": ["sql", "jenkins"]}, {"text": "Encouraged adoption of Browsr, the web frontend framework of tomorrow, with Standard Ml to optimize a microservice using Redis.", "tags": ["standard ml", "redis"]}, {"text": "Implemented fearless concurrency with Icon to replace a Slack bot made with Hadoop.", "tags": ["icon", "hadoop"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with Kotlin to justify switching to a stack without Matplotlib.", "tags": ["kotlin", "matplotlib"]}, {"text": "Used Jenkins CI server to test left-pad libraries with Modula-3 to download documentation for Cordova.", "tags": ["modula-3", "cordova"]}, {"text": "Split a monolith into microservices using a LISP dialect without parentheses with C as an excuse to play with Node.Js.", "tags": ["c", "node.js"]}, {"text": "Utilized a LISP dialect without parentheses with C++ to download documentation for Angular.", "tags": ["c++", "angular"]}, {"text": "Encouraged adoption of left-pad libraries with Eiffel to make web-scale a cluster of servers running Spring.", "tags": ["eiffel", "spring"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with J++ as an excuse to play with Ansible.", "tags": ["j++", "ansible"]}, {"text": "Programmed a robot with left-pad libraries with Objective-C as an excuse to play with Django.", "tags": ["objective-c", "django"]}, {"text": "Encouraged adoption of zygohistomorphic prepromophisms with Assembly to optimize a microservice using Git.", "tags": ["assembly", "git"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Ucsd Pascal to optimize a microservice using Junit.", "tags": ["ucsd pascal", "junit"]}, {"text": "Programmed a robot with fearless concurrency with Lua to replace a Slack bot made with Matplotlib.", "tags": ["lua", "matplotlib"]}, {"text": "Implemented fearless concurrency with Eiffel to download documentation for Spring.", "tags": ["eiffel", "spring"]}, {"text": "Wrote unit tests for blockchain-based social networks with Javascript to make web-scale a cluster of servers running Git.", "tags": ["javascript", "git"]}, {"text": "Encouraged adoption of left-pad libraries with C to download documentation for Cordova.", "tags": ["c", "cordova"]}, {"text": "Encouraged adoption of zygohistomorphic prepromophisms with Ecmascript to remove a dependency on Kivy.", "tags": ["ecmascript", "kivy"]}, {"text": "Split a monolith into microservices using a human-in-the-loop control system with Crystal to replace a Slack bot made with Guava.", "tags": ["crystal", "guava"]}, {"text": "Optimized blockchain-based social networks with Simula to justify switching to a stack without Virtualbox.", "tags": ["simula", "virtualbox"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with Vb.Net as an excuse to play with Requests.", "tags": ["vb.net", "requests"]}, {"text": "Encouraged adoption of left-pad libraries with Qore as an excuse to play with Kubernetes.", "tags": ["qore", "kubernetes"]}, {"text": "Split a monolith into microservices using left-pad libraries with Erlang to remove a dependency on Vue.Js.", "tags": ["erlang", "vue.js"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Golang to download documentation for Junit.", "tags": ["golang", "junit"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Objective-C to optimize a microservice using Cordova.", "tags": ["objective-c", "cordova"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with Elm as an excuse to play with Spark.", "tags": ["elm", "spark"]}, {"text": "Utilized zero-cost FFI with Intercal to prove the fragility of Django.", "tags": ["intercal", "django"]}, {"text": "Wrote unit tests for left-pad libraries with Javascript to prove the fragility of React.", "tags": ["javascript", "react"]}, {"text": "Used Jenkins CI server to test zygohistomorphic prepromophisms with Mesa to download documentation for Git.", "tags": ["mesa", "git"]}, {"text": "Implemented blockchain-based social networks with Smalltalk to make web-scale a cluster of servers running Vue.Js.", "tags": ["smalltalk", "vue.js"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with Oxygene to remove a dependency on Kivy.", "tags": ["oxygene", "kivy"]}, {"text": "Implemented a human-in-the-loop control system with Nil to make web-scale a cluster of servers running Django.", "tags": ["nil", "django"]}, {"text": "Optimized fearless concurrency with C# to replace a Slack bot made with Kubernetes.", "tags": ["c#", "kubernetes"]}, {"text": "Wrote unit tests for a human-in-the-loop control system with Clojure to justify switching to a stack without Cordova.", "tags": ["clojure", "cordova"]}, {"text": "Optimized a human-in-the-loop control system with Elm to replace a Slack bot made with Tqdm.", "tags": ["elm", "tqdm"]}, {"text": "Programmed a robot with a human-in-the-loop control system with C# to optimize a microservice using Guava.", "tags": ["c#", "guava"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Elixir to prove the fragility of Freebsd.", "tags": ["elixir", "freebsd"]}, {"text": "Programmed a robot with zygohistomorphic prepromophisms with Icon to replace a Slack bot made with Node.Js.", "tags": ["icon", "node.js"]}, {"text": "Optimized fearless concurrency with Crystal to optimize a microservice using Pandas.", "tags": ["crystal", "pandas"]}, {"text": "Implemented zygohistomorphic prepromophisms with Icon to make web-scale a cluster of servers running Jenkins.", "tags": ["icon", "jenkins"]}, {"text": "Programmed a robot with fearless concurrency with Dylan to remove a dependency on Linux.", "tags": ["dylan", "linux"]}, {"text": "Used Jenkins CI server to test a LISP dialect without parentheses with Java to optimize a microservice using Kivy.", "tags": ["java", "kivy"]}, {"text": "Split a monolith into microservices using Browsr, the web frontend framework of tomorrow, with Vba to remove a dependency on Hadoop.", "tags": ["vba", "hadoop"]}, {"text": "Implemented fearless concurrency with Idris to optimize a microservice using Git.", "tags": ["idris", "git"]}, {"text": "Optimized zygohistomorphic prepromophisms with J# to download documentation for Cmake.", "tags": ["j#", "cmake"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Strongtalk to replace a Slack bot made with Qemu.", "tags": ["strongtalk", "qemu"]}, {"text": "Implemented fearless concurrency with F# to make web-scale a cluster of servers running Aws.", "tags": ["f#", "aws"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Tcl to remove a dependency on Node.Js.", "tags": ["tcl", "node.js"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Genie to optimize a microservice using Virtualbox.", "tags": ["genie", "virtualbox"]}, {"text": "Programmed a robot with Browsr, the web frontend framework of tomorrow, with Ring to replace a Slack bot made with Qemu.", "tags": ["ring", "qemu"]}, {"text": "Programmed a robot with blockchain-based social networks with Alefbash to replace a Slack bot made with Boost.", "tags": ["alefbash", "boost"]}, {"text": "Wrote unit tests for blockchain-based social networks with Objective-C to replace a Slack bot made with Qemu.", "tags": ["objective-c", "qemu"]}, {"text": "Used Jenkins CI server to test left-pad libraries with Oxygene to replace a Slack bot made with Vue.Js.", "tags": ["oxygene", "vue.js"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Strongtalk to prove the fragility of Linux.", "tags": ["strongtalk", "linux"]}, {"text": "Encouraged adoption of fearless concurrency with Erlang to remove a dependency on Hadoop.", "tags": ["erlang", "hadoop"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with Rust to prove the fragility of Jquery.", "tags": ["rust", "jquery"]}, {"text": "Utilized fearless concurrency with Dylan to make web-scale a cluster of servers running React.", "tags": ["dylan", "react"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Lua to justify switching to a stack without React.", "tags": ["lua", "react"]}, {"text": "Implemented zero-cost FFI with Nil to justify switching to a stack without Cordova.", "tags": ["nil", "cordova"]}, {"text": "Optimized fearless concurrency with Java to optimize a microservice using Hadoop.", "tags": ["java", "hadoop"]}, {"text": "Optimized left-pad libraries with Javascript to download documentation for Junit.", "tags": ["javascript", "junit"]}, {"text": "Optimized Browsr, the web frontend framework of tomorrow, with Dylan to justify switching to a stack without Ansible.", "tags": ["dylan", "ansible"]}, {"text": "Wrote unit tests for a human-in-the-loop control system with Vala to remove a dependency on Guava.", "tags": ["vala", "guava"]}, {"text": "Implemented zero-cost FFI with Strongtalk to justify switching to a stack without Electron.", "tags": ["strongtalk", "electron"]}, {"text": "Utilized fearless concurrency with Golang to make web-scale a cluster of servers running Ansible.", "tags": ["golang", "ansible"]}, {"text": "Optimized left-pad libraries with Limbo to replace a Slack bot made with Requests.", "tags": ["limbo", "requests"]}, {"text": "Used Jenkins CI server to test a human-in-the-loop control system with Dart to replace a Slack bot made with Cmake.", "tags": ["dart", "cmake"]}, {"text": "Optimized zygohistomorphic prepromophisms with Vb.Net to justify switching to a stack without Angular.", "tags": ["vb.net", "angular"]}, {"text": "Utilized a LISP dialect without parentheses with R to remove a dependency on Node.Js.", "tags": ["r", "node.js"]}, {"text": "Used Jenkins CI server to test Browsr, the web frontend framework of tomorrow, with Javascript as an excuse to play with Jenkins.", "tags": ["javascript", "jenkins"]}, {"text": "Wrote unit tests for a human-in-the-loop control system with Ecmascript to download documentation for Spring.", "tags": ["ecmascript", "spring"]}, {"text": "Utilized left-pad libraries with Clojure to make web-scale a cluster of servers running Scrapy.", "tags": ["clojure", "scrapy"]}, {"text": "Programmed a robot with zygohistomorphic prepromophisms with C to replace a Slack bot made with React.", "tags": ["c", "react"]}, {"text": "Optimized zero-cost FFI with Groovy to optimize a microservice using Log4J.", "tags": ["groovy", "log4j"]}, {"text": "Encouraged adoption of zygohistomorphic prepromophisms with Groovy to optimize a microservice using Jenkins.", "tags": ["groovy", "jenkins"]}, {"text": "Split a monolith into microservices using a LISP dialect without parentheses with R to prove the fragility of Kivy.", "tags": ["r", "kivy"]}, {"text": "Optimized left-pad libraries with Groovy to remove a dependency on Docker.", "tags": ["groovy", "docker"]}, {"text": "Split a monolith into microservices using a LISP dialect without parentheses with Html to remove a dependency on Node.Js.", "tags": ["html", "node.js"]}, {"text": "Split a monolith into microservices using Browsr, the web frontend framework of tomorrow, with Hack to justify switching to a stack without Git.", "tags": ["hack", "git"]}, {"text": "Utilized a human-in-the-loop control system with Standard Ml to replace a Slack bot made with Django.", "tags": ["standard ml", "django"]}, {"text": "Used Jenkins CI server to test Browsr, the web frontend framework of tomorrow, with Nim to make web-scale a cluster of servers running Guava.", "tags": ["nim", "guava"]}, {"text": "Optimized left-pad libraries with F# to download documentation for Pytorch.", "tags": ["f#", "pytorch"]}, {"text": "Implemented zygohistomorphic prepromophisms with Dart to optimize a microservice using Spark.", "tags": ["dart", "spark"]}, {"text": "Encouraged adoption of a LISP dialect without parentheses with Swift to justify switching to a stack without Ember.", "tags": ["swift", "ember"]}, {"text": "Implemented zygohistomorphic prepromophisms with Hack to replace a Slack bot made with React.", "tags": ["hack", "react"]}, {"text": "Optimized blockchain-based social networks with Monkey to remove a dependency on Angular.", "tags": ["monkey", "angular"]}, {"text": "Split a monolith into microservices using a human-in-the-loop control system with Kotlin to make web-scale a cluster of servers running Redis.", "tags": ["kotlin", "redis"]}, {"text": "Implemented zygohistomorphic prepromophisms with Ecmascript to prove the fragility of .Net Core.", "tags": ["ecmascript", ".net core"]}, {"text": "Encouraged adoption of fearless concurrency with Fantom to optimize a microservice using Cmake.", "tags": ["fantom", "cmake"]}, {"text": "Wrote unit tests for a LISP dialect without parentheses with Icon to download documentation for Vmware.", "tags": ["icon", "vmware"]}, {"text": "Split a monolith into microservices using a LISP dialect without parentheses with Alefbash to prove the fragility of Docker.", "tags": ["alefbash", "docker"]}, {"text": "Encouraged adoption of left-pad libraries with Haskell to optimize a microservice using Matplotlib.", "tags": ["haskell", "matplotlib"]}, {"text": "Programmed a robot with a human-in-the-loop control system with Ring to replace a Slack bot made with Redis.", "tags": ["ring", "redis"]}, {"text": "Wrote unit tests for blockchain-based social networks with Fantom to make web-scale a cluster of servers running Cordova.", "tags": ["fantom", "cordova"]}, {"text": "Programmed a robot with zygohistomorphic prepromophisms with Golang as an excuse to play with .Net Core.", "tags": ["golang", ".net core"]}, {"text": "Programmed a robot with blockchain-based social networks with Scala to remove a dependency on Vue.Js.", "tags": ["scala", "vue.js"]}, {"text": "Programmed a robot with zero-cost FFI with Sql to remove a dependency on Scrapy.", "tags": ["sql", "scrapy"]}, {"text": "Utilized Browsr, the web frontend framework of tomorrow, with J# to prove the fragility of Junit.", "tags": ["j#", "junit"]}, {"text": "Programmed a robot with left-pad libraries with Ecmascript to replace a Slack bot made with Slf4J.", "tags": ["ecmascript", "slf4j"]}, {"text": "Split a monolith into microservices using left-pad libraries with F# to remove a dependency on Aws.", "tags": ["f#", "aws"]}, {"text": "Split a monolith into microservices using Browsr, the web frontend framework of tomorrow, with C# to make web-scale a cluster of servers running Qemu.", "tags": ["c#", "qemu"]}, {"text": "Used Jenkins CI server to test a LISP dialect without parentheses with Javascript to remove a dependency on Apache-Commons.", "tags": ["javascript", "apache-commons"]}, {"text": "Used Jenkins CI server to test zero-cost FFI with Newsqueak to make web-scale a cluster of servers running Aws.", "tags": ["newsqueak", "aws"]}, {"text": "Encouraged adoption of left-pad libraries with Chapel to optimize a microservice using Redis.", "tags": ["chapel", "redis"]}, {"text": "Split a monolith into microservices using left-pad libraries with C# as an excuse to play with Aws.", "tags": ["c#", "aws"]}, {"text": "Optimized a LISP dialect without parentheses with Ecmascript to download documentation for Cmake.", "tags": ["ecmascript", "cmake"]}, {"text": "Split a monolith into microservices using a human-in-the-loop control system with F# to replace a Slack bot made with Docker.", "tags": ["f#", "docker"]}, {"text": "Used Jenkins CI server to test blockchain-based social networks with Hack to make web-scale a cluster of servers running Tqdm.", "tags": ["hack", "tqdm"]}, {"text": "Implemented fearless concurrency with Lua to replace a Slack bot made with Vmware.", "tags": ["lua", "vmware"]}, {"text": "Utilized left-pad libraries with Hermes to remove a dependency on Pandas.", "tags": ["hermes", "pandas"]}, {"text": "Implemented fearless concurrency with R to make web-scale a cluster of servers running Pandas.", "tags": ["r", "pandas"]}, {"text": "Implemented Browsr, the web frontend framework of tomorrow, with Idris to prove the fragility of Qemu.", "tags": ["idris", "qemu"]}, {"text": "Encouraged adoption of zero-cost FFI with R to remove a dependency on Qemu.", "tags": ["r", "qemu"]}, {"text": "Split a monolith into microservices using left-pad libraries with Ocaml as an excuse to play with Requests.", "tags": ["ocaml", "requests"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Beanshell to download documentation for Electron.", "tags": ["beanshell", "electron"]}, {"text": "Optimized a LISP dialect without parentheses with Vala to optimize a microservice using Spark.", "tags": ["vala", "spark"]}, {"text": "Utilized fearless concurrency with Vala to make web-scale a cluster of servers running .Net Core.", "tags": ["vala", ".net core"]}, {"text": "Optimized a human-in-the-loop control system with Eiffel to prove the fragility of Tqdm.", "tags": ["eiffel", "tqdm"]}, {"text": "Programmed a robot with a LISP dialect without parentheses with Vala to prove the fragility of Spark.", "tags": ["vala", "spark"]}, {"text": "Programmed a robot with zero-cost FFI with Monkey to download documentation for Log4J.", "tags": ["monkey", "log4j"]}, {"text": "Split a monolith into microservices using left-pad libraries with Clojure to justify switching to a stack without Chef.", "tags": ["clojure", "chef"]}, {"text": "Split a monolith into microservices using a human-in-the-loop control system with Ring to justify switching to a stack without Guava.", "tags": ["ring", "guava"]}, {"text": "Optimized zero-cost FFI with Hermes as an excuse to play with Pytorch.", "tags": ["hermes", "pytorch"]}, {"text": "Used Jenkins CI server to test a human-in-the-loop control system with Php to replace a Slack bot made with Electron.", "tags": ["php", "electron"]}, {"text": "Split a monolith into microservices using blockchain-based social networks with F# to replace a Slack bot made with Redis.", "tags": ["f#", "redis"]}, {"text": "Programmed a robot with blockchain-based social networks with Clojure to download documentation for Tqdm.", "tags": ["clojure", "tqdm"]}, {"text": "Optimized zero-cost FFI with Mesa as an excuse to play with Xamarin.", "tags": ["mesa", "xamarin"]}, {"text": "Utilized left-pad libraries with Haskell as an excuse to play with Requests.", "tags": ["haskell", "requests"]}, {"text": "Wrote unit tests for blockchain-based social networks with Crystal as an excuse to play with Jenkins.", "tags": ["crystal", "jenkins"]}, {"text": "Wrote unit tests for Browsr, the web frontend framework of tomorrow, with Ada as an excuse to play with Hadoop.", "tags": ["ada", "hadoop"]}, {"text": "Used Jenkins CI server to test fearless concurrency with Beanshell to justify switching to a stack without Docker.", "tags": ["beanshell", "docker"]}, {"text": "Split a monolith into microservices using zygohistomorphic prepromophisms with Cyclone to remove a dependency on Virtualbox.", "tags": ["cyclone", "virtualbox"]}, {"text": "Wrote unit tests for a LISP dialect without parentheses with Nemerle to prove the fragility of Freebsd.", "tags": ["nemerle", "freebsd"]}, {"text": "Wrote unit tests for zygohistomorphic prepromophisms with Mesa to replace a Slack bot made with Apache-Commons.", "tags": ["mesa", "apache-commons"]}, {"text": "Split a monolith into microservices using left-pad libraries with D to make web-scale a cluster of servers running Angular.", "tags": ["d", "angular"]}, {"text": "Optimized zero-cost FFI with Html to justify switching to a stack without Tension.", "tags": ["html", "tension"]}, {"text": "Split a monolith into microservices using zero-cost FFI with Smalltalk to replace a Slack bot made with Spark.", "tags": ["smalltalk", "spark"]}, {"text": "Wrote unit tests for zero-cost FFI with Simula to prove the fragility of Kubernetes.", "tags": ["simula", "kubernetes"]}, {"text": "Optimized left-pad libraries with Objective-C to prove the fragility of Virtualbox.", "tags": ["objective-c", "virtualbox"]}, {"text": "Optimized a LISP dialect without parentheses with Fantom to download documentation for Cordova.", "tags": ["fantom", "cordova"]}, {"text": "Used Jenkins CI server to test a LISP dialect without parentheses with Dylan to replace a Slack bot made with .Net Core.", "tags": ["dylan", ".net core"]}, {"text": "Used Jenkins CI server to test Browsr, the web frontend framework of tomorrow, with Standard Ml to prove the fragility of Guava.", "tags": ["standard ml", "guava"]}]
        }
      ]
    },
    "Projects": {
      "entries": [
        {
          "dates": "",
          "role": "Calculator app written in \\textbf{Swift}",
          "at": "iOS Calculator++",
          "location": "",
          "tags": ["ios", "swift"],
          "bullets": [
            {
              "text": "Calculator for iOS devices with support for all ten digits"
            },
            {
              "text": "Capable of doing monster math"
            }
          ]
        },
        {
          "dates": "",
          "role": "Personal blog written in \\textbf{Python} and \\textbf{Django}",
          "at": "Link me on /r/programming",
          "location": "",
          "tags": ["python", "django"],
          "bullets": [
            {
              "text": "Blogging application serving tens of views per year"
            },
            {
              "text": "Features ``submit to reddit'' link at the beginning and end of every blog post"
            },
            {
              "text": "Please like my articles /r/programming"
            },
            {
              "text": "I crave the validation of arrogant hipsters"
            },
            {
              "text": "Please"
            }
          ]
        }
      ]
    },
    "Extracurriculars": {
      "lines": [
        {
          "primary": "UMass ACM",
          "secondary": "Go to meetings and talk about stuff I guess I dunno"
        },
        {
          "primary": "UMass Women in Computer Science",
          "secondary": "Go to more meetings and talk about more stuff"
        }
      ]
    },
    "Skills": {
      "computers": [
        {
          "primary1": "Languages",
          "secondary1": "Java, C, Scala, Swift",
          "primary2": "Hardware",
          "secondary2": "Raspberry Pi, Arduino"
        },
        {
          "primary1": "Libraries",
          "secondary1": "JUnit, Django",
          "primary2": "Software",
          "secondary2": "Git, Linux, \\LaTeX"
        }
      ]
    },
    "Languages": {
      "languages": [
        {
          "name": "English",
          "proficiency": "Native tongue"
        },
        {
          "name": "French",
          "proficiency": "Elementary proficiency"
        }
      ]
    }
  }
}
